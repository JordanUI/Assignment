------ DROP TABLES ---------------
DROP TABLE MORIS_SUPPLIER CASCADE CONSTRAINTS;
DROP TABLE MORIS_PRODUCT CASCADE CONSTRAINTS;
DROP TABLE MORIS_ORDER CASCADE CONSTRAINTS;
DROP TABLE MORIS_INVOICE CASCADE CONSTRAINTS;
DROP TABLE MORIS_ORDERLINE CASCADE CONSTRAINTS;

------------------- QUESTION 2 ----------------------------------
------- SUPPLIER ------------
CREATE TABLE MORIS_SUPPLIER 
(
SUPP_ID NUMBER(4),
SUPP_NAME VARCHAR2(2000),
SUPP_CONTACT_NAME VARCHAR2(2000),
SUPP_ADDRESS VARCHAR2(2000),
SUPP_CONTACT_NUMBER VARCHAR2(200),
SUPP_EMAIL VARCHAR2(100),
CONSTRAINT SUPP_ID_PK PRIMARY KEY(SUPP_ID) 
);

------- PRODUCT ------------
CREATE TABLE MORIS_PRODUCT
(
PRODUCT_ID NUMBER(4) NOT NULL,
PRODUCT_NAME VARCHAR2(2000),
PRODUCT_DESCRIPTION VARCHAR2(2000),
PRODUCT_PRICE NUMBER(8,2) NOT NULL,
CONSTRAINT PRODUCT_ID_PK PRIMARY KEY(PRODUCT_ID)
);

------- ORDER ------------
CREATE TABLE MORIS_ORDER
(
ORDER_ID NUMBER(4) NOT NULL,
ORDER_REF VARCHAR2(2000),
ORDER_DATE DATE,
ORDER_TOTAL_AMOUNT NUMBER(15,2),
ORDER_DESCRIPTION VARCHAR2(2000),
ORDER_STATUS VARCHAR2(20),
SUPP_ID NUMBER(4),
CONSTRAINT ORDER_ID_PK PRIMARY KEY(ORDER_ID),
CONSTRAINT SUPP_ID_FK FOREIGN KEY(SUPP_ID) REFERENCES MORIS_SUPPLIER(SUPP_ID)
);

------- INVOICE ------------
CREATE TABLE MORIS_INVOICE
(
INVOICE_ID NUMBER(4) NOT NULL,
INVOICE_REFERENCE VARCHAR2(2000),
INVOICE_DATE DATE,
HOLD_REASON VARCHAR2(2000),
INVOICE_AMOUNT NUMBER(15,2),
INVOICE_DESCRIPTION VARCHAR2(2000),
INVOICE_STATUS VARCHAR2(20),
ORDER_ID NUMBER(4),
CONSTRAINT INVOICE_ID_PK PRIMARY KEY(INVOICE_ID),
CONSTRAINT ORDER_ID_FK FOREIGN KEY(ORDER_ID) REFERENCES MORIS_ORDER(ORDER_ID)
);

------- ORDERLINE ------------
CREATE TABLE MORIS_ORDERLINE
(
ORDERLINE_ID NUMBER(4),
ORDER_ID NUMBER (4),
PRODUCT_ID NUMBER (4),
ORDERLINE_AMOUNT NUMBER(15,2),
CONSTRAINT ORDERLINE_ID_PK PRIMARY KEY(ORDERLINE_ID),
CONSTRAINT ORDERID_FK FOREIGN KEY (ORDER_ID) REFERENCES MORIS_ORDER(ORDER_ID),
CONSTRAINT PRODUCTID_FK FOREIGN KEY (PRODUCT_ID) REFERENCES MORIS_PRODUCT(PRODUCT_ID)
);

----------------- SEQUENNCES ------------------------
CREATE SEQUENCE MORIS_SUPPLIER_SEQ
START WITH 10;

CREATE SEQUENCE MORIS_PRODUCT_SEQ
START WITH 20;

CREATE SEQUENCE MORIS_ORDER_SEQ
START WITH 30;

CREATE SEQUENCE MORIS_INVOICE_SEQ
START WITH 40;

CREATE SEQUENCE MORIS_ORDERLINE_SEQ
START WITH 50;

------------ TRIGGERS ----------------------
CREATE OR REPLACE TRIGGER TRG_SUPPLIER_PK
BEFORE INSERT ON MORIS_SUPPLIER
FOR EACH ROW
BEGIN
IF :NEW.SUPP_ID IS NULL THEN
SELECT MORIS_SUPPLIER_SEQ.NEXTVAL INTO :NEW.SUPP_ID FROM DUAL;
END IF;
END;

CREATE OR REPLACE TRIGGER TRG_ORDER_PK
BEFORE INSERT ON MORIS_ORDER
FOR EACH ROW
BEGIN
IF :NEW.ORDER_ID IS NULL THEN
SELECT MORIS_ORDER_SEQ.NEXTVAL INTO :NEW.ORDER_ID FROM DUAL;
END IF;
END;


CREATE OR REPLACE TRIGGER TRG_INVOICE_PK
BEFORE INSERT ON MORIS_INVOICE
FOR EACH ROW
BEGIN
IF :NEW.INVOICE_ID IS NULL THEN
SELECT MORIS_INVOICE_SEQ.NEXTVAL INTO :NEW.INVOICE_ID FROM DUAL;
END IF;
END;

CREATE OR REPLACE TRIGGER TRG_ORDERLINE_PK
BEFORE INSERT ON MORIS_ORDERLINE
FOR EACH ROW
BEGIN
IF :NEW.ORDERLINE_ID IS NULL THEN
SELECT MORIS_ORDERLINE_SEQ.NEXTVAL INTO :NEW.ORDERLINE_ID FROM DUAL;
END IF;
END;

-------- STORED PROCEDURE --------------
--QUESTION 3 PART(I)
CREATE OR REPLACE PROCEDURE MIGRATE_BCM_ORDER_MGT
IS
BEGIN

INSERT INTO MORIS_SUPPLIER (SUPP_NAME, SUPP_CONTACT_NAME, SUPP_ADDRESS, SUPP_CONTACT_NUMBER, SUPP_EMAIL)
SELECT DISTINCT SUPPLIER_NAME, SUPP_CONTACT_NAME, SUPP_ADDRESS, SUPP_CONTACT_NUMBER, SUPP_EMAIL  FROM BCM_ORDER_MGT;

INSERT INTO MORIS_ORDER (ORDER_REF, ORDER_DATE, ORDER_TOTAL_AMOUNT, ORDER_DESCRIPTION, ORDER_STATUS, SUPP_ID)
SELECT DISTINCT ORDER_REF, TO_CHAR(TO_DATE(ORDER_DATE, 'DD-MM-YYYY'), 'DD-MON-YYYY'), TO_NUMBER(REPLACE(ORDER_TOTAL_AMOUNT, ',', ''), 999999999999.99), ORDER_DESCRIPTION, ORDER_STATUS, NULL  FROM BCM_ORDER_MGT;

INSERT INTO MORIS_INVOICE (INVOICE_REFERENCE, INVOICE_DATE, HOLD_REASON, INVOICE_AMOUNT, INVOICE_DESCRIPTION, INVOICE_STATUS, ORDER_ID)
SELECT DISTINCT INVOICE_REFERENCE, TO_CHAR(TO_DATE(INVOICE_DATE, 'DD-MM-YYYY'), 'DD-MON-YYYY'), INVOICE_HOLD_REASON, TO_NUMBER(REGEXP_REPLACE(INVOICE_AMOUNT, '[^0-9.]', ''), '999999999999.99'), INVOICE_DESCRIPTION, INVOICE_STATUS, NULL FROM BCM_ORDER_MGT;

INSERT INTO MORIS_ORDERLINE (ORDER_ID, PRODUCT_ID, ORDERLINE_AMOUNT)
SELECT NULL, NULL, TO_NUMBER(REGEXP_REPLACE(ORDER_LINE_AMOUNT, '[^0-9.]', ''), '999999999999.99') FROM BCM_ORDER_MGT;

COMMIT;

END MIGRATE_BCM_ORDER_MGT;

CALL MIGRATE_BCM_ORDER_MGT();

--QUESTION 3 PART (II)

ALTER TABLE MORIS_SUPPLIER 
ADD SUPP_TOWN_VILLAGE VARCHAR2(1000);


CREATE OR REPLACE PROCEDURE UPDATE_SUPPLIER_TOWN AS CURSOR supp_cursor 
IS 
SELECT SUPP_ID, SUPP_ADDRESS FROM MORIS_SUPPLIER;
v_town_village VARCHAR2(500);
BEGIN
FOR rec IN supp_cursor LOOP
v_town_village := TRIM(REGEXP_SUBSTR(rec.SUPP_ADDRESS, '[^,]+$', 1, 1));
UPDATE MORIS_SUPPLIER
SET SUPP_TOWN_VILLAGE = v_town_village
WHERE SUPP_ID = rec.SUPP_ID;
END LOOP;
COMMIT;
END UPDATE_SUPPLIER_TOWN;

CALL UPDATE_SUPPLIER_TOWN();





